name: Deploy Lambda to AWS HEY-SALOON-SERVICE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install

      - name: Package Lambda function
        run: |
          zip -r function.zip .

      - name: Verify zip file
        run: |
          ls -al function.zip

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.FINAL_AWS_REGION }}

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name hey-saloon-service --zip-file fileb://function.zip

      - name: Wait for function code update
        run: |
          echo "Waiting for the function code update to complete..."
          sleep 10

      - name: Update Lambda environment variables
        run: |
          aws lambda update-function-configuration \
            --function-name hey-saloon-service \
            --environment "Variables={PORT=${{ secrets.PORT }},FROM_EMAIL=${{ secrets.FROM_EMAIL }},MONGO_URI=${{ secrets.MONGO_URI }},JWT_SECRET=${{ secrets.JWT_SECRET }},JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }},ACCESS_TOKEN_EXPIRES_IN=${{ secrets.ACCESS_TOKEN_EXPIRES_IN }},REFRESH_TOKEN_EXPIRES_IN=${{ secrets.REFRESH_TOKEN_EXPIRES_IN }},DEFAULT_PROFILE_URL=${{ secrets.DEFAULT_PROFILE_URL }},DEFAULT_THUMBNAIL_URL=${{ secrets.DEFAULT_THUMBNAIL_URL }}}"

      - name: Clean up
        run: |
          rm function.zip
